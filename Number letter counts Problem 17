/*
If the numbers 1 to 5 are written out in words: 
one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.
If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?

NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.
*/

import java.util.*;
import java.io.*;
class Solution{

    public static int two_digit(int i, int []b){
            int a=0;
            int d2= i/10;
            if(i<=20){
                a+= b[i];
            }
            else {
            if(d2==2)  a +=b[20];
            else
                if(d2==3) a +=b[30];
            else
                if(d2==4) a +=b[40];
            else
                if(d2==5) a +=b[50];
            else            
                if(d2==6) a +=b[60];
            else 
                if(d2==7) a +=b[70];
            else
                if(d2==8) a +=b[80];
            else
                if(d2==9) a +=b[90];
            int d1 = i%10;
            a+=b[d1];
            }
            return a;
    }

    public static int three_digit(int i, int []b){
            int d2 = i/100;
            int a = 0;
                if(d2==1) a +=(b[1]);
            else
                if(d2==2) a +=(b[2]);
            else
                if(d2==3) a +=(b[3]);
            else
                if(d2==4) a +=(b[4]);
            else            
                if(d2==5) a +=(b[5]);
            else 
                if(d2==6) a +=(b[6]);
            else
                if(d2==7) a +=(b[7]);
            else
                if(d2==8) a +=(b[8]);
            else
                if(d2==9) a +=(b[9]);
                
            //extract ten's and unit digits
            int d1 = i%100;
            
            //add digits corresponding to ten's and unit's position and then add digits in "hundred"
            a+= two_digit(d1, b) + b[100];
            
            //add digits for "and" so long as the number is not a multiple of 100, eg. 900 = nine hundred
            if(i%100!=0) a+=3;
            return a;   
    }
    public static void main(String[] args) {   
        int[] b = {0,3,3,5,4,4,3,5,5,4,3,6,6,8,8,7,7,9,8,8,6,0
        ,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0
        ,0,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0
        ,0,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,7};
        
        int i, agg=0;
        for(i=1; i<=99;++i){
            b[i] = two_digit(i,b);
            agg+=b[i];
                }
        b[100] = 7;
        for(i=101;i<=999;++i){
            agg += three_digit(i, b);
        }
        agg+=21;
        System.out.println(agg);
        }
}
